# Generated by Django 5.2.1 on 2025-06-03 06:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Sender's name", max_length=100)),
                ('email', models.EmailField(help_text="Sender's email address", max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('message', models.TextField(help_text='Message content')),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('archived', 'Archived')], default='new', help_text='Message status', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin use')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('name', models.CharField(blank=True, help_text='Name associated with email (if available)', max_length=100)),
                ('sources', models.JSONField(default=list, help_text='List of sources where this email was collected')),
                ('subscription_count', models.PositiveIntegerField(default=0, help_text='Number of times subscribed')),
                ('message_count', models.PositiveIntegerField(default=0, help_text='Number of messages sent')),
                ('order_count', models.PositiveIntegerField(default=0, help_text='Number of orders placed')),
                ('is_active', models.BooleanField(default=True, help_text='Whether email is active for communications')),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email List Entry',
                'verbose_name_plural': 'Email List',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='EmailSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text="Subscriber's email address", max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('source', models.CharField(choices=[('popup', 'Newsletter Popup'), ('order', 'From Order'), ('footer', 'Footer Form'), ('manual', 'Manually Added')], default='popup', help_text='Source of the subscription', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the subscription is active')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Subscription',
                'verbose_name_plural': 'Email Subscriptions',
                'ordering': ['-subscribed_at'],
            },
        ),
    ]
